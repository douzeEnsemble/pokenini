name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        description: 'Docker Hub username'
        required: true
      DOCKERHUB_TOKEN:
        description: 'Docker Hub token'
        required: true

env: 
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  phpcsfixer:
    name: Quality / PHP-CS-Fixer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/local-tools-composer
        with:
          dir: php-cs-fixer
      - name: Run
        run: ./tools/php-cs-fixer/vendor/bin/php-cs-fixer check --diff

  phpmd:
    name: Quality / PHPMD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/local-tools-composer
        with:
          dir: phpmd
      - name: Run
        run: ./tools/phpmd/vendor/bin/phpmd src,tests text ruleset.xml

  psalm:
    name: Quality / Psalm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/local-tools-composer
        with:
          dir: psalm
      - name: Run
        run: ./tools/psalm/vendor/bin/psalm --show-info=false

  phpstan:
    name: Tests / PHPStan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/local-tools-composer
        with:
          dir: phpstan
      - name: Initialize
        run: |
          ./tools/phpstan/vendor/bin/phpstan clear-result-cache
      - name: Run
        run: |
          ./tools/phpstan/vendor/bin/phpstan analyse --memory-limit=-1

  deptract:
    name: Tests / Deptrac
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/local-tools-composer
        with:
          dir: deptrac
      - name: Debug
        run: |
          ls -lR ./tools/deptrac
      - name: Run
        run: |
          ./tools/deptrac/vendor/bin/deptrac analyse

  phpunit:
    name: Tests / PHPUnit
    runs-on: ubuntu-latest
    needs: [phpcsfixer, phpmd, psalm, phpstan]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare
        uses: ./.github/actions/docker-compose
      - name: Run Api
        run: |
          docker compose exec -T php php vendor/bin/phpunit tests/Api/ --exclude-group="time-testing"
      - name: Run Web
        run: |
          docker compose exec -T php php vendor/bin/phpunit tests/Web/ --exclude-group="time-testing"

  integration:
    name: Integration / Newman
    runs-on: ubuntu-latest
    needs: [phpcsfixer, phpmd, psalm, phpstan]
    env:
      APP_ENV: int
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare
        uses: ./.github/actions/docker-compose
      - name: Copy .env file
        shell: bash
        run: cp .env.int .env
      - name: Initialize
        run: |
          docker compose exec -T php php bin/console doctrine:database:create --if-not-exists
          docker compose exec -T php php bin/console doctrine:migrations:migrate --no-interaction
          docker compose exec -T php php bin/console app:update:labels
          docker compose exec -T php php bin/console app:update:games_collections_and_dex
          docker compose exec -T php php bin/console app:update:pokemons
          docker compose exec -T php php bin/console app:update:regional_dex_numbers
          docker compose exec -T php php bin/console app:update:games_availabilities
          docker compose exec -T php php bin/console app:update:games_shinies_availabilities
          docker compose exec -T php php bin/console app:calculate:game_bundles_availabilities
          docker compose exec -T php php bin/console app:calculate:game_bundles_shinies_availabilities
          docker compose exec -T php php bin/console app:calculate:dex_availabilities
          docker compose exec -T php php bin/console app:calculate:pokemon_availabilities
      - name: Debug
        run: |
          docker compose exec php curl -I http://web:douze@apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/ultrasunultramoon
          docker compose exec php curl http://web:douze@apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/ultrasunultramoon
      - name: Run
        run: |
          docker run --rm --name pokenini-newman \
            --network=pokenini_default \
            -v ./tests/Api/Integration:/etc/newman \
            -t postman/newman:alpine run collection.json

  measures:
    name: Measures
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare
        uses: ./.github/actions/docker-compose
      - name: Run Coverage
        run: | 
          docker compose exec \
            -e XDEBUG_MODE=coverage \
            -T php php vendor/bin/phpunit \
            --exclude-group="browser-testing" \
            --coverage-clover=coverage.xml \
            --coverage-xml=build/coverage/coverage-xml \
            --log-junit=build/coverage/junit.xml
      - name: Composer install Infection
        shell: bash
        run: docker compose exec -T php composer install --working-dir=tools/infection --prefer-dist --no-progress --no-interaction
      - name: Run Infection Api
        run: | 
          docker compose exec -T php php tools/infection/vendor/bin/infection \
            --threads=4 --no-progress \
            --skip-initial-tests --coverage=build/coverage \
            --min-msi=100 --min-covered-msi=100 \
            --filter=src/Api
      - name: Run Infection Web
        run: | 
          docker compose exec -T php php tools/infection/vendor/bin/infection \
            --threads=4 --no-progress \
            --skip-initial-tests --coverage=build/coverage \
            --min-msi=100 --min-covered-msi=100 \
            --filter=src/Web

  composer-audit:
    name: Security / Composer Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: composer audit

  symfonycorp-security-checker:
    name: Security / SymfonyCorp Checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache-db
        with:
            path: ~/.symfony/cache
            key: db
      - uses: symfonycorp/security-checker-action@v5
