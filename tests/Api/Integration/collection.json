{
  "info": {
    "_postman_id": "07de4c8a-4dc2-4940-a431-f91d12c03ec2",
    "name": "Pkmn-Lagd Album",
    "schema": "http://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Album Red, Green, Blue, Yellow",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Red, Green, Blue, Yellow\";",
              "const expectedDexFrenchTitle = \"Rouge, Vert, Bleu, Jaune\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 151;",
              "const expectedIncludeTexts = [",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'venusaur-f',",
              "    'Mega Venusaur',",
              "    '-Alola',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'Alpha Rhyperior',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Blindalys',",
              "    'Papinox',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/redgreenblueyellow",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "redgreenblueyellow"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Gold, Silver, Crystal",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Gold, Silver, Crystal\";",
              "const expectedDexFrenchTitle = \"Or, Argent, Cristal\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 276;",
              "const expectedIncludeTexts = [",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'venusaur-f',",
              "    'Mega Venusaur',",
              "    'Zarbi ?',",
              "    '-Alola',",
              "    'deoxys-attack',",
              "    'Alpha Rhyperior',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Blindalys',",
              "    'Papinox',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/goldsilvercrystal",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "goldsilvercrystal"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Ruby, Sapphire, Emerald",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Ruby, Sapphire, Emerald\";",
              "const expectedDexFrenchTitle = \"Rubis, Saphir, Ã‰meraude\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 416;",
              "const expectedIncludeTexts = [",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'venusaur-f',",
              "    'Mega Venusaur',",
              "    '-Alola',",
              "    'Alpha Rhyperior',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/rubysapphireemerald",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "rubysapphireemerald"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Fire Red, Leaf Green",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Fire Red, Leaf Green\";",
              "const expectedDexFrenchTitle = \"Rouge Feu, Vert Feuille\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 416;",
              "const expectedIncludeTexts = [",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'venusaur-f',",
              "    'Mega Venusaur',",
              "    '-Alola',",
              "    'Alpha Rhyperior',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/fireredleafgreen",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "fireredleafgreen"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Diamond, Pearl, Platinium",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Diamond, Pearl, Platinium\";",
              "const expectedDexFrenchTitle = \"Diamant, Perle, Platine\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 632;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Mega Venusaur',",
              "    '-Alola',",
              "    'Alpha Rhyperior',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/diamondpearlplatinium",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "diamondpearlplatinium"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Heart Gold, Soul Silver",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Heart Gold, Soul Silver\";",
              "const expectedDexFrenchTitle = \"Or HeartGold, Argent SoulSilver\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 632;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Mega Venusaur',",
              "    '-Alola',",
              "    'Alpha Rhyperior',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/heartgoldsoulsilver",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "heartgoldsoulsilver"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Black, White",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Black, White\";",
              "const expectedDexFrenchTitle = \"Noire, Blanche\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 799;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Mega Venusaur',",
              "    '-Alola',",
              "    'Alpha Rhyperior',",
              "    'Therian Thundurus',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/blackwhite",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "blackwhite"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Black 2, White 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Black 2, White 2\";",
              "const expectedDexFrenchTitle = \"Noire 2, Blanche 2\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 802;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Mega Venusaur',",
              "    '-Alola',",
              "    'Alpha Rhyperior',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/black2white2",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "black2white2"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album X, Y",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"X, Y\";",
              "const expectedDexFrenchTitle = \"X, Y\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 971;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'Mega Venusaur',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    '-Alola',",
              "    'Alpha Rhyperior',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/xy",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "xy"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Omega Ruby, Alpha Sapphire",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Omega Ruby, Alpha Sapphire\";",
              "const expectedDexFrenchTitle = \"Rubis OmÃ©ga, Saphir Alpha\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 971;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'Mega Venusaur',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    '-Alola',",
              "    'Alpha Rhyperior',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/omegarubyalphasapphire",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "omegarubyalphasapphire"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Sun, Moon",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Sun, Moon\";",
              "const expectedDexFrenchTitle = \"Soleil, Lune\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 1081;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'Mega Venusaur',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    '-Alola',",
              "    'Lycanroc-Midday',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Alpha Rhyperior',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/sunmoon",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "sunmoon"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Ultra Sun, Ultra Moon",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Ultra Sun, Ultra Moon\";",
              "const expectedDexFrenchTitle = \"Ultra Soleil, Ultra Lune\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 1087;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'Mega Venusaur',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    '-Alola',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Alpha Rhyperior',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/ultrasunultramoon",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "ultrasunultramoon"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Let's Go Pikachu, Let's Go Eevee",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Let's Go Pikachu, Let's Go Eevee\";",
              "const expectedDexFrenchTitle = \"Let's Go Pikachu, Let's Go Ã‰voli\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 209;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'Mega Venusaur',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    '-Alola',",
              "    'meltan',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Alpha Rhyperior',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Blindalys',",
              "    'Papinox',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/letsgopikachuletsgoeevee",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "letsgopikachuletsgoeevee"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Sword, Shield",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Sword, Shield\";",
              "const expectedDexFrenchTitle = \"Ã‰pÃ©e, Bouclier\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = false;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 943;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'giratina-origin',",
              "    '-Alola',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Mega Venusaur',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'Alpha Rhyperior',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'shaymin-sky',",
              "    'Shadow Rider Calyrex',",
              "    'Blindalys',",
              "    'Papinox',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/swordshield",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "swordshield"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Brilliant Diamond, Shining Pearl",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Brilliant Diamond, Shining Pearl\";",
              "const expectedDexFrenchTitle = \"Diamant Ã‰tincelant, Perle Scintillante\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 632;",
              "const expectedIncludeTexts = [",
              "    'venusaur-f',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'deoxys-attack',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Mega Venusaur',",
              "    '-Alola',",
              "    'Alpha Rhyperior',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/brilliantdiamondshiningpearl",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "brilliantdiamondshiningpearl"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album PokÃ©mon Legends Arceus",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"PokÃ©mon Legends Arceus\";",
              "const expectedDexFrenchTitle = \"LÃ©gendes PokÃ©mon : Arceus\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = true;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 663;",
              "const expectedIncludeTexts = [",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'Alpha Rhyperior',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'Blindalys',",
              "    'Papinox',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'venusaur-f',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Mega Venusaur',",
              "    '-Alola',",
              "    'deoxys-attack',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Shadow Rider Calyrex',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/pokemonlegendsarceus",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "pokemonlegendsarceus"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Home",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Home\";",
              "const expectedDexFrenchTitle = \"Home\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = false;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 1741;",
              "const expectedIncludeTexts = [",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'Alpha Rhyperior',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'venusaur-f',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Mega Venusaur',",
              "    '-Alola',",
              "    'deoxys-attack',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Blindalys',",
              "    'Papinox',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Shadow Rider Calyrex',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/home",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "home"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Home Shiny",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Home\\nShiny\";",
              "const expectedDexFrenchTitle = \"Home\\nChromatique\";",
              "const expectedDexIsShiny = true;",
              "const expectedDexIsPrivate = false;",
              "const expectedDexDisplayTemplate = \"box\";",
              "const expectedPokedexCount = 1223;",
              "const expectedIncludeTexts = [",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Thundurus',",
              "    'Therian Thundurus',",
              "    'venusaur-f',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    '-Alola',",
              "    'deoxys-attack',",
              "    'Spring Deerling',",
              "    'Winter Sawsbuck',",
              "    'Lycanroc-Midday',",
              "    'Lycanroc-Dusk',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'Mega Venusaur',",
              "    'Alpha Rhyperior',",
              "    'Shadow Rider Calyrex',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/homeshiny",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "homeshiny"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Home Pokemon Go",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Home\\nPokemon Go\";",
              "const expectedDexFrenchTitle = \"Home\\nPokÃ©mon Go\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = false;",
              "const expectedDexDisplayTemplate = \"list-7\";",
              "const expectedPokedexCount = 883;",
              "const expectedIncludeTexts = [",
              "    'Unown A',",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Spring Deerling',",
              "    'Thundurus',",
              "    'Lycanroc-Midday',",
              "    'naganadel',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'Blindalys',",
              "    'Papinox',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'venusaur-f',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Therian Thundurus',",
              "    'Mega Venusaur',",
              "    'deoxys-attack',",
              "    '-Alola',",
              "    'Alpha Rhyperior',",
              "    'Winter Sawsbuck',",
              "    'Lycanroc-Dusk',",
              "    'Shadow Rider Calyrex',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'meltan',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/homepokemongo",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "homepokemongo"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Alpha",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Alpha\";",
              "const expectedDexFrenchTitle = \"Baron\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = false;",
              "const expectedDexDisplayTemplate = \"list-3\";",
              "const expectedPokedexCount = 331;",
              "const expectedIncludeTexts = [",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'Blindalys',",
              "    'Papinox',",
              "    'Alpha Rhyperior',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Spring Deerling',",
              "    'Thundurus',",
              "    'Lycanroc-Midday',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'venusaur-f',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Therian Thundurus',",
              "    'Mega Venusaur',",
              "    'deoxys-attack',",
              "    '-Alola',",
              "    'Winter Sawsbuck',",
              "    'Lycanroc-Dusk',",
              "    'Shadow Rider Calyrex',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/alpha",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "alpha"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Album Mega",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedDexTitle = \"Mega\";",
              "const expectedDexFrenchTitle = \"MÃ©ga\";",
              "const expectedDexIsShiny = false;",
              "const expectedDexIsPrivate = false;",
              "const expectedDexDisplayTemplate = \"list-3\";",
              "const expectedPokedexCount = 48;",
              "const expectedIncludeTexts = [",
              "    'Mega Venusaur',",
              "];",
              "const expectedNotIncludeTexts = [",
              "    'nidoran-f',",
              "    'nidoran-m',",
              "    'Spring Deerling',",
              "    'Thundurus',",
              "    'Lycanroc-Midday',",
              "    'naganadel',",
              "    'meltan',",
              "    'Alcremie-Vanilla-Cream-Strawberry',",
              "    'venusaur-f',",
              "    'giratina-origin',",
              "    'shaymin-sky',",
              "    'Therian Thundurus',",
              "    'deoxys-attack',",
              "    '-Alola',",
              "    'Winter Sawsbuck',",
              "    'Lycanroc-Dusk',",
              "    'Shadow Rider Calyrex',",
              "    'Alcremie-Matcha-Cream-Love',",
              "    'alcremie-rainbow-swirl-flower',",
              "    'Gigantamax Toxtricity-Amped',",
              "    'Unown A',",
              "    'unown-b',",
              "    'Zarbi ?',",
              "    'Blindalys',",
              "    'Papinox',",
              "    'Alpha Rhyperior',",
              "    'Alpha Tangela',",
              "    'Baron Oniglali',",
              "    'Alpha Petilil',",
              "];",
              "",
              "pm.test(\"Status must be success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Dex title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.name).to.eql(expectedDexTitle);",
              "});",
              "",
              "pm.test(\"Dex french title should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.french_name).to.eql(expectedDexFrenchTitle);",
              "});",
              "",
              "pm.test(\"Dex is shiny boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_shiny).to.eql(expectedDexIsShiny);",
              "});",
              "",
              "pm.test(\"Dex is private boolean should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.is_private).to.eql(expectedDexIsPrivate);",
              "});",
              "",
              "pm.test(\"Dex display template should match expected\", function () {",
              "    pm.expect(pm.response.json().dex.display_template).to.eql(expectedDexDisplayTemplate);",
              "});",
              "",
              "pm.test(\"Response should contains or not some texts\", function () {",
              "    const responseText = pm.response.text();",
              "",
              "    for (i in expectedIncludeTexts) {",
              "        pm.expect(responseText).to.include(expectedIncludeTexts[i]);",
              "    }",
              "",
              "    for (i in expectedNotIncludeTexts) {",
              "        pm.expect(responseText).to.not.include(expectedNotIncludeTexts[i]);",
              "    };",
              "});",
              "",
              "pm.test(\"Pokemons list should have an expected count\", function () {",
              "    pm.expect(pm.response.json().pokemons).to.have.lengthOf(expectedPokedexCount);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "douze",
							"type": "string"
						},
						{
							"key": "username",
							"value": "web",
							"type": "string"
						}
					]
				},
        "url": {
          "raw": "http://apache/api/album/7b52009b64fd0a2a49e6d8a939753077792b0554/mega",
          "protocol": "http",
          "host": [
            "apache"
          ],
          "path": [
            "api",
            "album",
            "7b52009b64fd0a2a49e6d8a939753077792b0554",
            "mega"
          ]
        }
      },
      "response": []
    }
  ]
}
