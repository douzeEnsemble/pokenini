{% macro action(
    action,
    actionPrefix,
    item,
    icon,
    updatedItem,
    updatedAction,
    updatedState,
    actionLogsData
) %}
  {% set actionItem = actionPrefix~'_'~item %}

  {% set stateColor = {
    'ok': 'success',
    'ko': 'danger',
    'done': 'light',
    'pending': 'info',
  } %}
  {% set currentActionLog = null %}
  {% set lastActionLog = null %}
  
  {% if actionLogsData[actionItem] is defined and actionLogsData[actionItem] is not empty
    and actionLogsData[actionItem].current is defined and actionLogsData[actionItem].current is not empty
  %}
    {% set currentActionLog = actionLogsData[actionItem].current %}
  {% endif %}
  
  {% if actionLogsData[actionItem] is defined and actionLogsData[actionItem] is not empty
    and actionLogsData[actionItem].last is defined and actionLogsData[actionItem].last is not empty
  %}
    {% set lastActionLog = actionLogsData[actionItem].last %}
  {% endif %}

  {% if currentActionLog is null %}
    {% set currentBgStyle = 'light' %}
  {% elseif currentActionLog.errorTrace is not empty %}
    {% set currentBgStyle = stateColor['ko'] %}
  {% elseif currentActionLog.doneAt is not empty %}
    {% set currentBgStyle = stateColor['done'] %}
  {% elseif currentActionLog.createdAt is not empty %}
    {% set currentBgStyle = stateColor['pending'] %}
  {% endif %}

  {% if lastActionLog is null %}
    {% set lastBgStyle = 'light' %}
  {% elseif lastActionLog.errorTrace is not empty %}
    {% set lastBgStyle = stateColor['ko'] %}
  {% elseif lastActionLog.doneAt is not empty %}
    {% set lastBgStyle = stateColor['done'] %}
  {% elseif lastActionLog.createdAt is not empty %}
    {% set lastBgStyle = stateColor['pending'] %}
  {% endif %}

  {% if updatedAction is same as(actionPrefix)
    and updatedItem is same as(item)
  %}
    {% set currentBgStyle = stateColor[updatedState] %}
  {% endif %}

  {% set currentTextStyle = 'dark' %}
  {% if currentBgStyle == 'success' or currentBgStyle ==  'danger' or currentBgStyle ==  'info' %}
    {% set currentTextStyle = 'light' %}
  {% endif %}
  {% set lastTextStyle = 'dark' %}
  {% if lastBgStyle == 'success' or lastBgStyle ==  'danger' or lastBgStyle ==  'info' %}
    {% set lastTextStyle = 'light' %}
  {% endif %}

  <div 
    class="col-lg-4 col-md-6 d-flex align-items-start admin-item admin-item-{{ actionItem }} admin-item-{{ actionPrefix }}"
    data-current-bg-style="{{ currentBgStyle }}"
    data-current-text-style="{{ currentTextStyle }}"
    data-last-bg-style="{{ lastBgStyle }}"
    data-last-text-style="{{ lastTextStyle }}"
    id="{{ actionItem }}"
  >
    <div class="d-flex rounded-3 p-3 mb-md-1 mb-sm-2 mb-3 align-items-start">
      {{ _self.actionIcon(action, item, icon, currentBgStyle, currentTextStyle) }}
      <div>
        {{ _self.actionTitle(action, item, icon) }}
        {{ _self.actionFlashError(actionPrefix, item, updatedItem, updatedAction, updatedState) }}
        {{ _self.actionContainer(action, item, currentActionLog, lastActionLog) }}
        {{ _self.actionButton(action, actionPrefix, item, currentBgStyle) }}
      </div>
		</div>
  </div>
{% endmacro %}

{% macro actionTitle (
    action,
    item,
    icon,
) %}
<h3 class="text-body-emphasis">{{ ('admin.actions.'~action~'.'~item~'.title')|trans }}</h3>
{% endmacro %}

{% macro actionIcon (
    action,
    item,
    icon,
    bgStyle,
    txtStyle,
) %}
<div class="icon-square bg-{{ bgStyle }} d-inline-flex align-items-center justify-content-center fs-4 flex-shrink-0 me-3">
  <i class="text-{{ txtStyle }} bi bi-{{ icon }}"></i>
</div>
{% endmacro %}

{% macro actionButton (
    action,
    actionPrefix,
    item,
    bgStyle
) %}
<div class="text-end border-top border-{{ bgStyle }} pt-3">
  <a 
    href="{{ path('app_web_adminaction_'~actionPrefix, {'name': item}) }}"
    class="btn btn-outline-primary admin-item-cta"
  >
    {{ ('admin.actions.'~action~'.'~item~'.cta')|trans }}
  </a>
</div>
{% endmacro %}

{% macro actionFlashError(
    action,
    item,
    updatedItem,
    updatedAction,
    updatedState,
) %}
{% if 'ko' == updatedState
    and updatedAction is same as(action)
    and updatedItem is same as(item)
%}
{% for message in app.flashes('error') %}
<div class="flash-danger alert alert-danger">
  {{ message|trans }}
</div>
{% endfor %}
{% endif %}
{% endmacro %}

{% macro actionContainer(
    action,
    item,
    currentActionLog,
    lastActionLog,
) %}
{% set actionItem = action~'_'~item %}
{% if currentActionLog is null %}
  {% set state = 'default' %}
{% elseif currentActionLog.errorTrace is not empty %}
  {% set state = 'error' %}
{% elseif currentActionLog.doneAt is not empty %}
  {% set state = 'done' %}
{% elseif currentActionLog.createdAt is not empty %}
  {% set state = 'pending' %}
{% endif %}

{% if currentActionLog is not empty %}
  <div class="admin-item-current mb-3">
    {% if lastActionLog is not null %}
    {{ _self.toggleActions('last') }}
    {% endif %}
    {{ _self.actionDetail(action, currentActionLog, lastActionLog) }}
  </div>

  {% if lastActionLog is not null %}
  <div class="admin-item-last mb-3" hidden>
    {{ _self.toggleActions('current') }}
    {{ _self.actionDetail(action, lastActionLog, currentActionLog) }}
  </div>
  {% endif %}

{% endif %}
{% endmacro %}

{% macro actionDetail(
    action,
    actionData,
    otherActionData
) %}
<div class="me-3 pt-3">
    {% if actionData.errorTrace is not empty %}
    <div class="alert alert-danger mt-1 mb-2">
      {{ actionData.errorTrace }}
    </div>
    {% endif %}
    
    {% if actionData.details is not empty %}
    <dl class="row admin-item-report mt-1 mb-3">
      {% for slug, value in actionData.details %}
      <dt class="col-6">
        {{ ('admin.actions.'~action~'.'~slug~'.item')|trans }}
      </dt>
      <dd class="col-6 text-end mb-0 pe-5">
        {{ value|number_format(0, '.', ' ') }}
      </d>
      {% endfor %}
    </dl>
    {% endif %}

    <div class="col-12 row admin-item-report-meta admin-item-report-date mt-1 mb-0 text-muted">
      {% set date = 'created_at' %}
      {% set dateValue = actionData.createdAt %}
      {% if actionData.doneAt is not empty %}
      {% set date = 'done_at' %}
      {% set dateValue = actionData.doneAt %}
      {% endif %}

      <strong class="col-6">
        {{ ('admin.action.'~date)|trans }}
      </strong>
      <em class="col-6 text-start mb-0">
        {{ dateValue|date('d/m/Y H:i:s', 'Europe/Paris') }}
      </em>
    </div>
    
    {% if actionData.executionTime is defined and actionData.executionTime is not null %}
    <div class="col-12 row admin-item-report-meta admin-item-report-execution mt-1 mb-0 text-muted">
      <strong class="col-6">
        {{ ('admin.action.execution_time')|trans }}
      </strong>
      <em class="col-6 text-start mb-0">
        {{ (actionData.executionTime)|date('H:i:s') }}
      </em>
    </div>
    {% endif %}

    {% if actionData.doneAt is empty and actionData.createdAt is not empty
      and otherActionData is not null 
      and otherActionData.doneAt is not empty and otherActionData.executionTime is not empty
    %}
    {{ _self.progress(actionData, otherActionData) }}
    {% endif %}
</div>
{% endmacro %}

{% macro toggleActions(type) %}
<a 
  class="admin-item-toggle float-end link-body-emphasis link-opacity-50-hover" 
  title="{{ ('admin.toggle.'~type)|trans }}"
  href="#" role="button"
>
  {% if 'last' == type %}
  <i class="bi bi-chevron-right"></i>
  {% else %} 
  <i class="bi bi-chevron-bar-left"></i>
  {% endif %} 
</a>
{% endmacro %}

{% macro progress(actionData, otherActionData) %}
{% set timeDiff = actionData.createdAt.diff(date('now')) %}
{% set elapsedSeconds = timeDiff.days * 86400 + timeDiff.h * 3600 + timeDiff.i * 60 + timeDiff.s %}
{% set elapsedPercent = otherActionData.executionTime ? elapsedSeconds * 100 / otherActionData.executionTime : 0 %}

{% set progressColor = 'bg-danger' %}
{% if elapsedPercent < 125 %}
{% set progressColor = 'bg-warning' %}
{% endif %}
{% if elapsedPercent <= 100 %}
{% set progressColor = 'bg-info' %}
{% endif %}
{% if elapsedPercent <= 25 %}
{% set progressColor = 'bg-success' %}
{% endif %}

<div 
  class="progress" 
  role="progressbar" 
  aria-valuenow="{{ elapsedSeconds }}" 
  aria-valuemin="0" 
  aria-valuemax="{{ otherActionData.executionTime }}"
>
  <div 
    class="progress-bar progress-bar-striped progress-bar-animated {{ progressColor }}" 
    style="width: {{ elapsedPercent|round }}%"
    title="{{ elapsedPercent|round }}%"
  >
    {{ elapsedPercent|round }}%
  </div>
</div>
{% endmacro %}